/*
Account API

The <b>Account API</b> gives sellers the ability to configure their eBay seller accounts, including the seller's policies (seller-defined custom policies and eBay business policies), opt in and out of eBay seller programs, configure sales tax tables, and get account information.  <br><br>For details on the availability of the methods in this API, see <a href=\"/api-docs/sell/account/overview.html#requirements\">Account API requirements and restrictions</a>.

API version: v1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package account

import (
	"encoding/json"
)

// CompactCustomPolicyResponse The response payload for requests that return a list of custom policies.
type CompactCustomPolicyResponse struct {
	// The unique custom policy identifier for the policy being returned.<br/><br/><span class=\"tablenote\"><strong>Note:</strong> This value is automatically assigned by the system when the policy is created.</span>
	CustomPolicyId *string `json:"customPolicyId,omitempty"`
	// Customer-facing label shown on View Item pages for items to which the policy applies. This seller-defined string is displayed as a system-generated hyperlink pointing to detailed policy information.<br/><br/><b>Max length:</b> 65
	Label *string `json:"label,omitempty"`
	// The seller-defined name for the custom policy. Names must be unique for policies assigned to the same seller, policy type, and eBay marketplace.<br /><span class=\"tablenote\"><strong>Note:</strong> This field is visible only to the seller. </span><br /><br /><b>Max length:</b> 65
	Name *string `json:"name,omitempty"`
	// Specifies the type of Custom Policy being returned. <br/><br/>Two Custom Policy types are supported: <ul><li>Product Compliance (PRODUCT_COMPLIANCE)</li> <li>Takeback (TAKE_BACK)</li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:CustomPolicyTypeEnum'>eBay API documentation</a>
	PolicyType *string `json:"policyType,omitempty"`
}

// NewCompactCustomPolicyResponse instantiates a new CompactCustomPolicyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompactCustomPolicyResponse() *CompactCustomPolicyResponse {
	this := CompactCustomPolicyResponse{}
	return &this
}

// NewCompactCustomPolicyResponseWithDefaults instantiates a new CompactCustomPolicyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompactCustomPolicyResponseWithDefaults() *CompactCustomPolicyResponse {
	this := CompactCustomPolicyResponse{}
	return &this
}

// GetCustomPolicyId returns the CustomPolicyId field value if set, zero value otherwise.
func (o *CompactCustomPolicyResponse) GetCustomPolicyId() string {
	if o == nil || o.CustomPolicyId == nil {
		var ret string
		return ret
	}
	return *o.CustomPolicyId
}

// GetCustomPolicyIdOk returns a tuple with the CustomPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompactCustomPolicyResponse) GetCustomPolicyIdOk() (*string, bool) {
	if o == nil || o.CustomPolicyId == nil {
		return nil, false
	}
	return o.CustomPolicyId, true
}

// HasCustomPolicyId returns a boolean if a field has been set.
func (o *CompactCustomPolicyResponse) HasCustomPolicyId() bool {
	if o != nil && o.CustomPolicyId != nil {
		return true
	}

	return false
}

// SetCustomPolicyId gets a reference to the given string and assigns it to the CustomPolicyId field.
func (o *CompactCustomPolicyResponse) SetCustomPolicyId(v string) {
	o.CustomPolicyId = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *CompactCustomPolicyResponse) GetLabel() string {
	if o == nil || o.Label == nil {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompactCustomPolicyResponse) GetLabelOk() (*string, bool) {
	if o == nil || o.Label == nil {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *CompactCustomPolicyResponse) HasLabel() bool {
	if o != nil && o.Label != nil {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *CompactCustomPolicyResponse) SetLabel(v string) {
	o.Label = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CompactCustomPolicyResponse) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompactCustomPolicyResponse) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CompactCustomPolicyResponse) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CompactCustomPolicyResponse) SetName(v string) {
	o.Name = &v
}

// GetPolicyType returns the PolicyType field value if set, zero value otherwise.
func (o *CompactCustomPolicyResponse) GetPolicyType() string {
	if o == nil || o.PolicyType == nil {
		var ret string
		return ret
	}
	return *o.PolicyType
}

// GetPolicyTypeOk returns a tuple with the PolicyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompactCustomPolicyResponse) GetPolicyTypeOk() (*string, bool) {
	if o == nil || o.PolicyType == nil {
		return nil, false
	}
	return o.PolicyType, true
}

// HasPolicyType returns a boolean if a field has been set.
func (o *CompactCustomPolicyResponse) HasPolicyType() bool {
	if o != nil && o.PolicyType != nil {
		return true
	}

	return false
}

// SetPolicyType gets a reference to the given string and assigns it to the PolicyType field.
func (o *CompactCustomPolicyResponse) SetPolicyType(v string) {
	o.PolicyType = &v
}

func (o CompactCustomPolicyResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CustomPolicyId != nil {
		toSerialize["customPolicyId"] = o.CustomPolicyId
	}
	if o.Label != nil {
		toSerialize["label"] = o.Label
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.PolicyType != nil {
		toSerialize["policyType"] = o.PolicyType
	}
	return json.Marshal(toSerialize)
}

type NullableCompactCustomPolicyResponse struct {
	value *CompactCustomPolicyResponse
	isSet bool
}

func (v NullableCompactCustomPolicyResponse) Get() *CompactCustomPolicyResponse {
	return v.value
}

func (v *NullableCompactCustomPolicyResponse) Set(val *CompactCustomPolicyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCompactCustomPolicyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCompactCustomPolicyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompactCustomPolicyResponse(val *CompactCustomPolicyResponse) *NullableCompactCustomPolicyResponse {
	return &NullableCompactCustomPolicyResponse{value: val, isSet: true}
}

func (v NullableCompactCustomPolicyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompactCustomPolicyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


