/*
Account API

The <b>Account API</b> gives sellers the ability to configure their eBay seller accounts, including the seller's policies (the Fulfillment Policy, Payment Policy, and Return Policy), opt in and out of eBay seller programs, configure sales tax tables, and get account information.  <br><br>For details on the availability of the methods in this API, see <a href=\"/api-docs/sell/account/overview.html#requirements\">Account API requirements and restrictions</a>.

API version: v1.6.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package account

import (
	"encoding/json"
)

// PaymentPolicyResponse The response payload for payment policy requests.
type PaymentPolicyResponse struct {
	// This field is for future use.
	Href *string `json:"href,omitempty"`
	// This field is for future use.
	Limit *int32 `json:"limit,omitempty"`
	// This field is for future use.
	Next *string `json:"next,omitempty"`
	// This field is for future use.
	Offset *int32 `json:"offset,omitempty"`
	// This field is for future use.
	Prev *string `json:"prev,omitempty"`
	// The total number of items retrieved in the result set.  <br><br>If no items are found, this field is returned with a value of <code>0</code>.
	Total *int32 `json:"total,omitempty"`
	// A list of the seller's payment policies.
	PaymentPolicies *[]PaymentPolicy `json:"paymentPolicies,omitempty"`
}

// NewPaymentPolicyResponse instantiates a new PaymentPolicyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentPolicyResponse() *PaymentPolicyResponse {
	this := PaymentPolicyResponse{}
	return &this
}

// NewPaymentPolicyResponseWithDefaults instantiates a new PaymentPolicyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentPolicyResponseWithDefaults() *PaymentPolicyResponse {
	this := PaymentPolicyResponse{}
	return &this
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *PaymentPolicyResponse) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentPolicyResponse) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *PaymentPolicyResponse) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *PaymentPolicyResponse) SetHref(v string) {
	o.Href = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *PaymentPolicyResponse) GetLimit() int32 {
	if o == nil || o.Limit == nil {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentPolicyResponse) GetLimitOk() (*int32, bool) {
	if o == nil || o.Limit == nil {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *PaymentPolicyResponse) HasLimit() bool {
	if o != nil && o.Limit != nil {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *PaymentPolicyResponse) SetLimit(v int32) {
	o.Limit = &v
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *PaymentPolicyResponse) GetNext() string {
	if o == nil || o.Next == nil {
		var ret string
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentPolicyResponse) GetNextOk() (*string, bool) {
	if o == nil || o.Next == nil {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *PaymentPolicyResponse) HasNext() bool {
	if o != nil && o.Next != nil {
		return true
	}

	return false
}

// SetNext gets a reference to the given string and assigns it to the Next field.
func (o *PaymentPolicyResponse) SetNext(v string) {
	o.Next = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *PaymentPolicyResponse) GetOffset() int32 {
	if o == nil || o.Offset == nil {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentPolicyResponse) GetOffsetOk() (*int32, bool) {
	if o == nil || o.Offset == nil {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *PaymentPolicyResponse) HasOffset() bool {
	if o != nil && o.Offset != nil {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *PaymentPolicyResponse) SetOffset(v int32) {
	o.Offset = &v
}

// GetPrev returns the Prev field value if set, zero value otherwise.
func (o *PaymentPolicyResponse) GetPrev() string {
	if o == nil || o.Prev == nil {
		var ret string
		return ret
	}
	return *o.Prev
}

// GetPrevOk returns a tuple with the Prev field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentPolicyResponse) GetPrevOk() (*string, bool) {
	if o == nil || o.Prev == nil {
		return nil, false
	}
	return o.Prev, true
}

// HasPrev returns a boolean if a field has been set.
func (o *PaymentPolicyResponse) HasPrev() bool {
	if o != nil && o.Prev != nil {
		return true
	}

	return false
}

// SetPrev gets a reference to the given string and assigns it to the Prev field.
func (o *PaymentPolicyResponse) SetPrev(v string) {
	o.Prev = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *PaymentPolicyResponse) GetTotal() int32 {
	if o == nil || o.Total == nil {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentPolicyResponse) GetTotalOk() (*int32, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *PaymentPolicyResponse) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *PaymentPolicyResponse) SetTotal(v int32) {
	o.Total = &v
}

// GetPaymentPolicies returns the PaymentPolicies field value if set, zero value otherwise.
func (o *PaymentPolicyResponse) GetPaymentPolicies() []PaymentPolicy {
	if o == nil || o.PaymentPolicies == nil {
		var ret []PaymentPolicy
		return ret
	}
	return *o.PaymentPolicies
}

// GetPaymentPoliciesOk returns a tuple with the PaymentPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentPolicyResponse) GetPaymentPoliciesOk() (*[]PaymentPolicy, bool) {
	if o == nil || o.PaymentPolicies == nil {
		return nil, false
	}
	return o.PaymentPolicies, true
}

// HasPaymentPolicies returns a boolean if a field has been set.
func (o *PaymentPolicyResponse) HasPaymentPolicies() bool {
	if o != nil && o.PaymentPolicies != nil {
		return true
	}

	return false
}

// SetPaymentPolicies gets a reference to the given []PaymentPolicy and assigns it to the PaymentPolicies field.
func (o *PaymentPolicyResponse) SetPaymentPolicies(v []PaymentPolicy) {
	o.PaymentPolicies = &v
}

func (o PaymentPolicyResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.Limit != nil {
		toSerialize["limit"] = o.Limit
	}
	if o.Next != nil {
		toSerialize["next"] = o.Next
	}
	if o.Offset != nil {
		toSerialize["offset"] = o.Offset
	}
	if o.Prev != nil {
		toSerialize["prev"] = o.Prev
	}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	if o.PaymentPolicies != nil {
		toSerialize["paymentPolicies"] = o.PaymentPolicies
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentPolicyResponse struct {
	value *PaymentPolicyResponse
	isSet bool
}

func (v NullablePaymentPolicyResponse) Get() *PaymentPolicyResponse {
	return v.value
}

func (v *NullablePaymentPolicyResponse) Set(val *PaymentPolicyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentPolicyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentPolicyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentPolicyResponse(val *PaymentPolicyResponse) *NullablePaymentPolicyResponse {
	return &NullablePaymentPolicyResponse{value: val, isSet: true}
}

func (v NullablePaymentPolicyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentPolicyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


