/*
Account API

The <b>Account API</b> gives sellers the ability to configure their eBay seller accounts, including the seller's policies (seller-defined custom policies and eBay business policies), opt in and out of eBay seller programs, configure sales tax tables, and get account information.  <br><br>For details on the availability of the methods in this API, see <a href=\"/api-docs/sell/account/overview.html#requirements\">Account API requirements and restrictions</a>.

API version: v1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package account

import (
	"encoding/json"
)

// SetFulfillmentPolicyResponse Complex type that that gets populated with a response containing a fulfillment policy.
type SetFulfillmentPolicyResponse struct {
	// The <b>CategoryTypeEnum</b> value to which this policy applies. This container is used to discern accounts that sell motor vehicles from those that do not.<br /><br /><b>Restriction:</b> Currently, each policy can be set to only one <b>categoryTypes</b> value at a time.
	CategoryTypes *[]CategoryType `json:"categoryTypes,omitempty"`
	// An optional seller-defined description of the fulfillment policy for internal use (this value is not displayed to end users).  <br><br><b>Max length</b>: 250
	Description *string `json:"description,omitempty"`
	// If set to <code>true</code>, the seller offers freight shipping. Freight shipping can be used for large items over 150 lbs.
	FreightShipping *bool `json:"freightShipping,omitempty"`
	// A unique eBay-assigned ID for a fulfillment policy. This ID is generated when the policy is created.
	FulfillmentPolicyId *string `json:"fulfillmentPolicyId,omitempty"`
	// If set to <code>true</code>, the seller has opted-in to the <i>Global Shipping Program</i> and eBay automatically sets the international shipping service options to <code>International Priority Shipping</code>. <br><br>If the value of <b>globalShipping</b> is <code>false</code>, the seller is responsible for specifying one or more international shipping service options if they want to ship internationally.
	GlobalShipping *bool `json:"globalShipping,omitempty"`
	HandlingTime *TimeDuration `json:"handlingTime,omitempty"`
	// If set to <code>true</code>, no shipping is offered by this policy and the seller offers only local pickup of the item (normally from a non-business location). This option is most often used for customer-to-customer sales and if set, <b>costType</b> should be set to <code>NOT_SPECIFIED</code>.
	LocalPickup *bool `json:"localPickup,omitempty"`
	// The ID of the eBay marketplace to which this fulfillment policy applies. If this value is not specified, value defaults to the seller's eBay registration site. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum'>eBay API documentation</a>
	MarketplaceId *string `json:"marketplaceId,omitempty"`
	// A user-defined name for this fulfillment policy. Names must be unique for policies assigned to the same marketplace. <br><br><b>Max length</b>: 64
	Name *string `json:"name,omitempty"`
	// If set to <code>true</code>, the seller offers the \"Click and Collect\" option. <br><br>Currently, \"Click and Collect\" is available only to large retail merchants the eBay AU and UK marketplaces.
	PickupDropOff *bool `json:"pickupDropOff,omitempty"`
	// A list that defines the seller's shipping configurations for <code>DOMESTIC</code> and <code>INTERNATIONAL</code> order shipments. <br><br>The list has a single element if the seller ships to only domestic locations. If the seller also ships internationally, a second element defines their international shipping options. <br><br>Shipping options configure the high-level shipping settings that apply to orders, such as flat-rate or calculated shipping, and any rate tables the seller wants to associate with the shipping services. <br><br>Each <b>shippingOption</b> element has a <b>shippingServices</b> container that defines the list of shipping services (domestic or international) offered with this fulfillment policy. See <a href=\"/api-docs/sell/static/seller-accounts/configuring-shipping-options.html\" target=\"_blank\">Configuring shipping options</a>.
	ShippingOptions *[]ShippingOption `json:"shippingOptions,omitempty"`
	ShipToLocations *RegionSet `json:"shipToLocations,omitempty"`
	// A list of warnings that were generated during the processing of the request. This field normally returns empty, which indicates the request did not generate any warnings.
	Warnings *[]Error `json:"warnings,omitempty"`
}

// NewSetFulfillmentPolicyResponse instantiates a new SetFulfillmentPolicyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetFulfillmentPolicyResponse() *SetFulfillmentPolicyResponse {
	this := SetFulfillmentPolicyResponse{}
	return &this
}

// NewSetFulfillmentPolicyResponseWithDefaults instantiates a new SetFulfillmentPolicyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetFulfillmentPolicyResponseWithDefaults() *SetFulfillmentPolicyResponse {
	this := SetFulfillmentPolicyResponse{}
	return &this
}

// GetCategoryTypes returns the CategoryTypes field value if set, zero value otherwise.
func (o *SetFulfillmentPolicyResponse) GetCategoryTypes() []CategoryType {
	if o == nil || o.CategoryTypes == nil {
		var ret []CategoryType
		return ret
	}
	return *o.CategoryTypes
}

// GetCategoryTypesOk returns a tuple with the CategoryTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetFulfillmentPolicyResponse) GetCategoryTypesOk() (*[]CategoryType, bool) {
	if o == nil || o.CategoryTypes == nil {
		return nil, false
	}
	return o.CategoryTypes, true
}

// HasCategoryTypes returns a boolean if a field has been set.
func (o *SetFulfillmentPolicyResponse) HasCategoryTypes() bool {
	if o != nil && o.CategoryTypes != nil {
		return true
	}

	return false
}

// SetCategoryTypes gets a reference to the given []CategoryType and assigns it to the CategoryTypes field.
func (o *SetFulfillmentPolicyResponse) SetCategoryTypes(v []CategoryType) {
	o.CategoryTypes = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SetFulfillmentPolicyResponse) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetFulfillmentPolicyResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SetFulfillmentPolicyResponse) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SetFulfillmentPolicyResponse) SetDescription(v string) {
	o.Description = &v
}

// GetFreightShipping returns the FreightShipping field value if set, zero value otherwise.
func (o *SetFulfillmentPolicyResponse) GetFreightShipping() bool {
	if o == nil || o.FreightShipping == nil {
		var ret bool
		return ret
	}
	return *o.FreightShipping
}

// GetFreightShippingOk returns a tuple with the FreightShipping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetFulfillmentPolicyResponse) GetFreightShippingOk() (*bool, bool) {
	if o == nil || o.FreightShipping == nil {
		return nil, false
	}
	return o.FreightShipping, true
}

// HasFreightShipping returns a boolean if a field has been set.
func (o *SetFulfillmentPolicyResponse) HasFreightShipping() bool {
	if o != nil && o.FreightShipping != nil {
		return true
	}

	return false
}

// SetFreightShipping gets a reference to the given bool and assigns it to the FreightShipping field.
func (o *SetFulfillmentPolicyResponse) SetFreightShipping(v bool) {
	o.FreightShipping = &v
}

// GetFulfillmentPolicyId returns the FulfillmentPolicyId field value if set, zero value otherwise.
func (o *SetFulfillmentPolicyResponse) GetFulfillmentPolicyId() string {
	if o == nil || o.FulfillmentPolicyId == nil {
		var ret string
		return ret
	}
	return *o.FulfillmentPolicyId
}

// GetFulfillmentPolicyIdOk returns a tuple with the FulfillmentPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetFulfillmentPolicyResponse) GetFulfillmentPolicyIdOk() (*string, bool) {
	if o == nil || o.FulfillmentPolicyId == nil {
		return nil, false
	}
	return o.FulfillmentPolicyId, true
}

// HasFulfillmentPolicyId returns a boolean if a field has been set.
func (o *SetFulfillmentPolicyResponse) HasFulfillmentPolicyId() bool {
	if o != nil && o.FulfillmentPolicyId != nil {
		return true
	}

	return false
}

// SetFulfillmentPolicyId gets a reference to the given string and assigns it to the FulfillmentPolicyId field.
func (o *SetFulfillmentPolicyResponse) SetFulfillmentPolicyId(v string) {
	o.FulfillmentPolicyId = &v
}

// GetGlobalShipping returns the GlobalShipping field value if set, zero value otherwise.
func (o *SetFulfillmentPolicyResponse) GetGlobalShipping() bool {
	if o == nil || o.GlobalShipping == nil {
		var ret bool
		return ret
	}
	return *o.GlobalShipping
}

// GetGlobalShippingOk returns a tuple with the GlobalShipping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetFulfillmentPolicyResponse) GetGlobalShippingOk() (*bool, bool) {
	if o == nil || o.GlobalShipping == nil {
		return nil, false
	}
	return o.GlobalShipping, true
}

// HasGlobalShipping returns a boolean if a field has been set.
func (o *SetFulfillmentPolicyResponse) HasGlobalShipping() bool {
	if o != nil && o.GlobalShipping != nil {
		return true
	}

	return false
}

// SetGlobalShipping gets a reference to the given bool and assigns it to the GlobalShipping field.
func (o *SetFulfillmentPolicyResponse) SetGlobalShipping(v bool) {
	o.GlobalShipping = &v
}

// GetHandlingTime returns the HandlingTime field value if set, zero value otherwise.
func (o *SetFulfillmentPolicyResponse) GetHandlingTime() TimeDuration {
	if o == nil || o.HandlingTime == nil {
		var ret TimeDuration
		return ret
	}
	return *o.HandlingTime
}

// GetHandlingTimeOk returns a tuple with the HandlingTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetFulfillmentPolicyResponse) GetHandlingTimeOk() (*TimeDuration, bool) {
	if o == nil || o.HandlingTime == nil {
		return nil, false
	}
	return o.HandlingTime, true
}

// HasHandlingTime returns a boolean if a field has been set.
func (o *SetFulfillmentPolicyResponse) HasHandlingTime() bool {
	if o != nil && o.HandlingTime != nil {
		return true
	}

	return false
}

// SetHandlingTime gets a reference to the given TimeDuration and assigns it to the HandlingTime field.
func (o *SetFulfillmentPolicyResponse) SetHandlingTime(v TimeDuration) {
	o.HandlingTime = &v
}

// GetLocalPickup returns the LocalPickup field value if set, zero value otherwise.
func (o *SetFulfillmentPolicyResponse) GetLocalPickup() bool {
	if o == nil || o.LocalPickup == nil {
		var ret bool
		return ret
	}
	return *o.LocalPickup
}

// GetLocalPickupOk returns a tuple with the LocalPickup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetFulfillmentPolicyResponse) GetLocalPickupOk() (*bool, bool) {
	if o == nil || o.LocalPickup == nil {
		return nil, false
	}
	return o.LocalPickup, true
}

// HasLocalPickup returns a boolean if a field has been set.
func (o *SetFulfillmentPolicyResponse) HasLocalPickup() bool {
	if o != nil && o.LocalPickup != nil {
		return true
	}

	return false
}

// SetLocalPickup gets a reference to the given bool and assigns it to the LocalPickup field.
func (o *SetFulfillmentPolicyResponse) SetLocalPickup(v bool) {
	o.LocalPickup = &v
}

// GetMarketplaceId returns the MarketplaceId field value if set, zero value otherwise.
func (o *SetFulfillmentPolicyResponse) GetMarketplaceId() string {
	if o == nil || o.MarketplaceId == nil {
		var ret string
		return ret
	}
	return *o.MarketplaceId
}

// GetMarketplaceIdOk returns a tuple with the MarketplaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetFulfillmentPolicyResponse) GetMarketplaceIdOk() (*string, bool) {
	if o == nil || o.MarketplaceId == nil {
		return nil, false
	}
	return o.MarketplaceId, true
}

// HasMarketplaceId returns a boolean if a field has been set.
func (o *SetFulfillmentPolicyResponse) HasMarketplaceId() bool {
	if o != nil && o.MarketplaceId != nil {
		return true
	}

	return false
}

// SetMarketplaceId gets a reference to the given string and assigns it to the MarketplaceId field.
func (o *SetFulfillmentPolicyResponse) SetMarketplaceId(v string) {
	o.MarketplaceId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SetFulfillmentPolicyResponse) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetFulfillmentPolicyResponse) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SetFulfillmentPolicyResponse) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SetFulfillmentPolicyResponse) SetName(v string) {
	o.Name = &v
}

// GetPickupDropOff returns the PickupDropOff field value if set, zero value otherwise.
func (o *SetFulfillmentPolicyResponse) GetPickupDropOff() bool {
	if o == nil || o.PickupDropOff == nil {
		var ret bool
		return ret
	}
	return *o.PickupDropOff
}

// GetPickupDropOffOk returns a tuple with the PickupDropOff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetFulfillmentPolicyResponse) GetPickupDropOffOk() (*bool, bool) {
	if o == nil || o.PickupDropOff == nil {
		return nil, false
	}
	return o.PickupDropOff, true
}

// HasPickupDropOff returns a boolean if a field has been set.
func (o *SetFulfillmentPolicyResponse) HasPickupDropOff() bool {
	if o != nil && o.PickupDropOff != nil {
		return true
	}

	return false
}

// SetPickupDropOff gets a reference to the given bool and assigns it to the PickupDropOff field.
func (o *SetFulfillmentPolicyResponse) SetPickupDropOff(v bool) {
	o.PickupDropOff = &v
}

// GetShippingOptions returns the ShippingOptions field value if set, zero value otherwise.
func (o *SetFulfillmentPolicyResponse) GetShippingOptions() []ShippingOption {
	if o == nil || o.ShippingOptions == nil {
		var ret []ShippingOption
		return ret
	}
	return *o.ShippingOptions
}

// GetShippingOptionsOk returns a tuple with the ShippingOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetFulfillmentPolicyResponse) GetShippingOptionsOk() (*[]ShippingOption, bool) {
	if o == nil || o.ShippingOptions == nil {
		return nil, false
	}
	return o.ShippingOptions, true
}

// HasShippingOptions returns a boolean if a field has been set.
func (o *SetFulfillmentPolicyResponse) HasShippingOptions() bool {
	if o != nil && o.ShippingOptions != nil {
		return true
	}

	return false
}

// SetShippingOptions gets a reference to the given []ShippingOption and assigns it to the ShippingOptions field.
func (o *SetFulfillmentPolicyResponse) SetShippingOptions(v []ShippingOption) {
	o.ShippingOptions = &v
}

// GetShipToLocations returns the ShipToLocations field value if set, zero value otherwise.
func (o *SetFulfillmentPolicyResponse) GetShipToLocations() RegionSet {
	if o == nil || o.ShipToLocations == nil {
		var ret RegionSet
		return ret
	}
	return *o.ShipToLocations
}

// GetShipToLocationsOk returns a tuple with the ShipToLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetFulfillmentPolicyResponse) GetShipToLocationsOk() (*RegionSet, bool) {
	if o == nil || o.ShipToLocations == nil {
		return nil, false
	}
	return o.ShipToLocations, true
}

// HasShipToLocations returns a boolean if a field has been set.
func (o *SetFulfillmentPolicyResponse) HasShipToLocations() bool {
	if o != nil && o.ShipToLocations != nil {
		return true
	}

	return false
}

// SetShipToLocations gets a reference to the given RegionSet and assigns it to the ShipToLocations field.
func (o *SetFulfillmentPolicyResponse) SetShipToLocations(v RegionSet) {
	o.ShipToLocations = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *SetFulfillmentPolicyResponse) GetWarnings() []Error {
	if o == nil || o.Warnings == nil {
		var ret []Error
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetFulfillmentPolicyResponse) GetWarningsOk() (*[]Error, bool) {
	if o == nil || o.Warnings == nil {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *SetFulfillmentPolicyResponse) HasWarnings() bool {
	if o != nil && o.Warnings != nil {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []Error and assigns it to the Warnings field.
func (o *SetFulfillmentPolicyResponse) SetWarnings(v []Error) {
	o.Warnings = &v
}

func (o SetFulfillmentPolicyResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CategoryTypes != nil {
		toSerialize["categoryTypes"] = o.CategoryTypes
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.FreightShipping != nil {
		toSerialize["freightShipping"] = o.FreightShipping
	}
	if o.FulfillmentPolicyId != nil {
		toSerialize["fulfillmentPolicyId"] = o.FulfillmentPolicyId
	}
	if o.GlobalShipping != nil {
		toSerialize["globalShipping"] = o.GlobalShipping
	}
	if o.HandlingTime != nil {
		toSerialize["handlingTime"] = o.HandlingTime
	}
	if o.LocalPickup != nil {
		toSerialize["localPickup"] = o.LocalPickup
	}
	if o.MarketplaceId != nil {
		toSerialize["marketplaceId"] = o.MarketplaceId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.PickupDropOff != nil {
		toSerialize["pickupDropOff"] = o.PickupDropOff
	}
	if o.ShippingOptions != nil {
		toSerialize["shippingOptions"] = o.ShippingOptions
	}
	if o.ShipToLocations != nil {
		toSerialize["shipToLocations"] = o.ShipToLocations
	}
	if o.Warnings != nil {
		toSerialize["warnings"] = o.Warnings
	}
	return json.Marshal(toSerialize)
}

type NullableSetFulfillmentPolicyResponse struct {
	value *SetFulfillmentPolicyResponse
	isSet bool
}

func (v NullableSetFulfillmentPolicyResponse) Get() *SetFulfillmentPolicyResponse {
	return v.value
}

func (v *NullableSetFulfillmentPolicyResponse) Set(val *SetFulfillmentPolicyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSetFulfillmentPolicyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSetFulfillmentPolicyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetFulfillmentPolicyResponse(val *SetFulfillmentPolicyResponse) *NullableSetFulfillmentPolicyResponse {
	return &NullableSetFulfillmentPolicyResponse{value: val, isSet: true}
}

func (v NullableSetFulfillmentPolicyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetFulfillmentPolicyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


