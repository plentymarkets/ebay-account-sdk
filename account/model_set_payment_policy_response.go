/*
Account API

The <b>Account API</b> gives sellers the ability to configure their eBay seller accounts, including the seller's policies (seller-defined custom policies and eBay business policies), opt in and out of eBay seller programs, configure sales tax tables, and get account information.  <br><br>For details on the availability of the methods in this API, see <a href=\"/api-docs/sell/account/overview.html#requirements\">Account API requirements and restrictions</a>.

API version: v1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package account

import (
	"encoding/json"
)

// SetPaymentPolicyResponse Complex type that that gets populated with a response containing a payment policy.
type SetPaymentPolicyResponse struct {
	// The <b>CategoryTypeEnum</b> value to which this policy applies. This container is used to discern accounts that sell motor vehicles from those that do not.<br /><br /><b>Restriction:</b> Currently, each policy can be set to only one <b>categoryTypes</b> value at a time.
	CategoryTypes *[]CategoryType `json:"categoryTypes,omitempty"`
	Deposit *Deposit `json:"deposit,omitempty"`
	// An optional seller-defined description of the payment policy.
	Description *string `json:"description,omitempty"`
	FullPaymentDueIn *TimeDuration `json:"fullPaymentDueIn,omitempty"`
	// If set to <code>true</code>,  payment is due upon receipt (eBay generates a receipt when the buyer agrees to purchase an item). The items will be available for other buyers until the payment is complete.<br /><br />This boolean must be set in the payment policy if the seller wants to create a listing that has an <i>immediate payment</i> requirement. <p class=\"tablenote\"><b>Note:</b> This container can be used for sellers who opt-in to the <a href=\"/managed-payments\" title=\"eBay Developers Program page\" target=\"_blank\">managed payments</a> program, but some requirements do not apply.</p><b>Default:</b> False
	ImmediatePay *bool `json:"immediatePay,omitempty"`
	// The ID of the eBay marketplace to which this payment policy applies. If this value is not specified, the value defaults to the seller's eBay registration site. <p class=\"tablenote\"><b>Note:</b> A limited number of sellers, on a limited number of eBay marketplaces, are currently opted-in to the eBay managed payments program. To view the eBay marketplaces where managed payments are currently supported, see the <a href=\"/managed-payments\" title=\"eBay Developers Program page\" target=\"_blank\">managed payments</a> landing page.</p> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum'>eBay API documentation</a>
	MarketplaceId *string `json:"marketplaceId,omitempty"`
	// A user-defined name for this payment policy. Names must be unique for policies assigned to the same marketplace. <p class=\"tablenote\"><b>Note</b>: eBay will create a new payment policy for sellers who opt-in to the <a href=\"/managed-payments\" title=\"eBay Developers Program page\" target=\"_blank\">managed payments</a> program.</p><b>Max length:</b> 64
	Name *string `json:"name,omitempty"`
	// <p class=\"tablenote\"><b>Note:</b> NO LONGER SUPPORTED. Although this field may be returned for some older payment business policies, payment instructions are no longer supported by payment business policies. If this field is returned, it can be ignored and these payment instructions will not appear in any listings that use the corresponding business policy.</p>A free-form string field that allows sellers to add detailed payment instructions to their listings. The payment instructions appear on eBay's View Item and Checkout pages. <br><br>eBay recommends sellers use this field to clarify payment policies for motor vehicle listings on eBay Motors. For example, sellers can include the specifics on the deposit (if required), pickup/delivery arrangements, and full payment details on the vehicle. <br><br>The field allows only 500 characters as input, but due to the way the eBay web site UI treats characters, this field can return more than 500 characters in the response. For example, characters like & and ' (ampersand and single quote) count as 5 characters each. <br /><br /><b>Restriction:</b> This container is not supported for sellers who opt-in to the <a href=\"/managed-payments\" title=\"eBay Developers Program page\" target=\"_blank\">managed payments</a> program.  <br><br><b>Max length:</b> 1000
	PaymentInstructions *string `json:"paymentInstructions,omitempty"`
	// If the seller is not opted-in to managed payments, this container returns a list of the payment methods accepted by the seller.  <br><br>When not opted-in to managed payments, each payment policy must specify at least one payment method. <p class=\"tablenote\"><b>Note:</b> The <b>paymentMethods</b> container is not returned if the seller is opted-in to the <a href=\"https://pages.ebay.com/seller-center/service-and-payments/managed-payments-on-ebay.html\" title=\"eBay Seller Center page\" target=\"_blank\">managed payments</a> program.</p>
	PaymentMethods *[]PaymentMethod `json:"paymentMethods,omitempty"`
	// A unique eBay-assigned ID for a payment policy. This ID is generated when the policy is created.
	PaymentPolicyId *string `json:"paymentPolicyId,omitempty"`
	// A list of warnings related to request. This field normally returns empty, which indicates the request did not generate any warnings.
	Warnings *[]Error `json:"warnings,omitempty"`
}

// NewSetPaymentPolicyResponse instantiates a new SetPaymentPolicyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetPaymentPolicyResponse() *SetPaymentPolicyResponse {
	this := SetPaymentPolicyResponse{}
	return &this
}

// NewSetPaymentPolicyResponseWithDefaults instantiates a new SetPaymentPolicyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetPaymentPolicyResponseWithDefaults() *SetPaymentPolicyResponse {
	this := SetPaymentPolicyResponse{}
	return &this
}

// GetCategoryTypes returns the CategoryTypes field value if set, zero value otherwise.
func (o *SetPaymentPolicyResponse) GetCategoryTypes() []CategoryType {
	if o == nil || o.CategoryTypes == nil {
		var ret []CategoryType
		return ret
	}
	return *o.CategoryTypes
}

// GetCategoryTypesOk returns a tuple with the CategoryTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetPaymentPolicyResponse) GetCategoryTypesOk() (*[]CategoryType, bool) {
	if o == nil || o.CategoryTypes == nil {
		return nil, false
	}
	return o.CategoryTypes, true
}

// HasCategoryTypes returns a boolean if a field has been set.
func (o *SetPaymentPolicyResponse) HasCategoryTypes() bool {
	if o != nil && o.CategoryTypes != nil {
		return true
	}

	return false
}

// SetCategoryTypes gets a reference to the given []CategoryType and assigns it to the CategoryTypes field.
func (o *SetPaymentPolicyResponse) SetCategoryTypes(v []CategoryType) {
	o.CategoryTypes = &v
}

// GetDeposit returns the Deposit field value if set, zero value otherwise.
func (o *SetPaymentPolicyResponse) GetDeposit() Deposit {
	if o == nil || o.Deposit == nil {
		var ret Deposit
		return ret
	}
	return *o.Deposit
}

// GetDepositOk returns a tuple with the Deposit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetPaymentPolicyResponse) GetDepositOk() (*Deposit, bool) {
	if o == nil || o.Deposit == nil {
		return nil, false
	}
	return o.Deposit, true
}

// HasDeposit returns a boolean if a field has been set.
func (o *SetPaymentPolicyResponse) HasDeposit() bool {
	if o != nil && o.Deposit != nil {
		return true
	}

	return false
}

// SetDeposit gets a reference to the given Deposit and assigns it to the Deposit field.
func (o *SetPaymentPolicyResponse) SetDeposit(v Deposit) {
	o.Deposit = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SetPaymentPolicyResponse) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetPaymentPolicyResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SetPaymentPolicyResponse) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SetPaymentPolicyResponse) SetDescription(v string) {
	o.Description = &v
}

// GetFullPaymentDueIn returns the FullPaymentDueIn field value if set, zero value otherwise.
func (o *SetPaymentPolicyResponse) GetFullPaymentDueIn() TimeDuration {
	if o == nil || o.FullPaymentDueIn == nil {
		var ret TimeDuration
		return ret
	}
	return *o.FullPaymentDueIn
}

// GetFullPaymentDueInOk returns a tuple with the FullPaymentDueIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetPaymentPolicyResponse) GetFullPaymentDueInOk() (*TimeDuration, bool) {
	if o == nil || o.FullPaymentDueIn == nil {
		return nil, false
	}
	return o.FullPaymentDueIn, true
}

// HasFullPaymentDueIn returns a boolean if a field has been set.
func (o *SetPaymentPolicyResponse) HasFullPaymentDueIn() bool {
	if o != nil && o.FullPaymentDueIn != nil {
		return true
	}

	return false
}

// SetFullPaymentDueIn gets a reference to the given TimeDuration and assigns it to the FullPaymentDueIn field.
func (o *SetPaymentPolicyResponse) SetFullPaymentDueIn(v TimeDuration) {
	o.FullPaymentDueIn = &v
}

// GetImmediatePay returns the ImmediatePay field value if set, zero value otherwise.
func (o *SetPaymentPolicyResponse) GetImmediatePay() bool {
	if o == nil || o.ImmediatePay == nil {
		var ret bool
		return ret
	}
	return *o.ImmediatePay
}

// GetImmediatePayOk returns a tuple with the ImmediatePay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetPaymentPolicyResponse) GetImmediatePayOk() (*bool, bool) {
	if o == nil || o.ImmediatePay == nil {
		return nil, false
	}
	return o.ImmediatePay, true
}

// HasImmediatePay returns a boolean if a field has been set.
func (o *SetPaymentPolicyResponse) HasImmediatePay() bool {
	if o != nil && o.ImmediatePay != nil {
		return true
	}

	return false
}

// SetImmediatePay gets a reference to the given bool and assigns it to the ImmediatePay field.
func (o *SetPaymentPolicyResponse) SetImmediatePay(v bool) {
	o.ImmediatePay = &v
}

// GetMarketplaceId returns the MarketplaceId field value if set, zero value otherwise.
func (o *SetPaymentPolicyResponse) GetMarketplaceId() string {
	if o == nil || o.MarketplaceId == nil {
		var ret string
		return ret
	}
	return *o.MarketplaceId
}

// GetMarketplaceIdOk returns a tuple with the MarketplaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetPaymentPolicyResponse) GetMarketplaceIdOk() (*string, bool) {
	if o == nil || o.MarketplaceId == nil {
		return nil, false
	}
	return o.MarketplaceId, true
}

// HasMarketplaceId returns a boolean if a field has been set.
func (o *SetPaymentPolicyResponse) HasMarketplaceId() bool {
	if o != nil && o.MarketplaceId != nil {
		return true
	}

	return false
}

// SetMarketplaceId gets a reference to the given string and assigns it to the MarketplaceId field.
func (o *SetPaymentPolicyResponse) SetMarketplaceId(v string) {
	o.MarketplaceId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SetPaymentPolicyResponse) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetPaymentPolicyResponse) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SetPaymentPolicyResponse) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SetPaymentPolicyResponse) SetName(v string) {
	o.Name = &v
}

// GetPaymentInstructions returns the PaymentInstructions field value if set, zero value otherwise.
func (o *SetPaymentPolicyResponse) GetPaymentInstructions() string {
	if o == nil || o.PaymentInstructions == nil {
		var ret string
		return ret
	}
	return *o.PaymentInstructions
}

// GetPaymentInstructionsOk returns a tuple with the PaymentInstructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetPaymentPolicyResponse) GetPaymentInstructionsOk() (*string, bool) {
	if o == nil || o.PaymentInstructions == nil {
		return nil, false
	}
	return o.PaymentInstructions, true
}

// HasPaymentInstructions returns a boolean if a field has been set.
func (o *SetPaymentPolicyResponse) HasPaymentInstructions() bool {
	if o != nil && o.PaymentInstructions != nil {
		return true
	}

	return false
}

// SetPaymentInstructions gets a reference to the given string and assigns it to the PaymentInstructions field.
func (o *SetPaymentPolicyResponse) SetPaymentInstructions(v string) {
	o.PaymentInstructions = &v
}

// GetPaymentMethods returns the PaymentMethods field value if set, zero value otherwise.
func (o *SetPaymentPolicyResponse) GetPaymentMethods() []PaymentMethod {
	if o == nil || o.PaymentMethods == nil {
		var ret []PaymentMethod
		return ret
	}
	return *o.PaymentMethods
}

// GetPaymentMethodsOk returns a tuple with the PaymentMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetPaymentPolicyResponse) GetPaymentMethodsOk() (*[]PaymentMethod, bool) {
	if o == nil || o.PaymentMethods == nil {
		return nil, false
	}
	return o.PaymentMethods, true
}

// HasPaymentMethods returns a boolean if a field has been set.
func (o *SetPaymentPolicyResponse) HasPaymentMethods() bool {
	if o != nil && o.PaymentMethods != nil {
		return true
	}

	return false
}

// SetPaymentMethods gets a reference to the given []PaymentMethod and assigns it to the PaymentMethods field.
func (o *SetPaymentPolicyResponse) SetPaymentMethods(v []PaymentMethod) {
	o.PaymentMethods = &v
}

// GetPaymentPolicyId returns the PaymentPolicyId field value if set, zero value otherwise.
func (o *SetPaymentPolicyResponse) GetPaymentPolicyId() string {
	if o == nil || o.PaymentPolicyId == nil {
		var ret string
		return ret
	}
	return *o.PaymentPolicyId
}

// GetPaymentPolicyIdOk returns a tuple with the PaymentPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetPaymentPolicyResponse) GetPaymentPolicyIdOk() (*string, bool) {
	if o == nil || o.PaymentPolicyId == nil {
		return nil, false
	}
	return o.PaymentPolicyId, true
}

// HasPaymentPolicyId returns a boolean if a field has been set.
func (o *SetPaymentPolicyResponse) HasPaymentPolicyId() bool {
	if o != nil && o.PaymentPolicyId != nil {
		return true
	}

	return false
}

// SetPaymentPolicyId gets a reference to the given string and assigns it to the PaymentPolicyId field.
func (o *SetPaymentPolicyResponse) SetPaymentPolicyId(v string) {
	o.PaymentPolicyId = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *SetPaymentPolicyResponse) GetWarnings() []Error {
	if o == nil || o.Warnings == nil {
		var ret []Error
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetPaymentPolicyResponse) GetWarningsOk() (*[]Error, bool) {
	if o == nil || o.Warnings == nil {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *SetPaymentPolicyResponse) HasWarnings() bool {
	if o != nil && o.Warnings != nil {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []Error and assigns it to the Warnings field.
func (o *SetPaymentPolicyResponse) SetWarnings(v []Error) {
	o.Warnings = &v
}

func (o SetPaymentPolicyResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CategoryTypes != nil {
		toSerialize["categoryTypes"] = o.CategoryTypes
	}
	if o.Deposit != nil {
		toSerialize["deposit"] = o.Deposit
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.FullPaymentDueIn != nil {
		toSerialize["fullPaymentDueIn"] = o.FullPaymentDueIn
	}
	if o.ImmediatePay != nil {
		toSerialize["immediatePay"] = o.ImmediatePay
	}
	if o.MarketplaceId != nil {
		toSerialize["marketplaceId"] = o.MarketplaceId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.PaymentInstructions != nil {
		toSerialize["paymentInstructions"] = o.PaymentInstructions
	}
	if o.PaymentMethods != nil {
		toSerialize["paymentMethods"] = o.PaymentMethods
	}
	if o.PaymentPolicyId != nil {
		toSerialize["paymentPolicyId"] = o.PaymentPolicyId
	}
	if o.Warnings != nil {
		toSerialize["warnings"] = o.Warnings
	}
	return json.Marshal(toSerialize)
}

type NullableSetPaymentPolicyResponse struct {
	value *SetPaymentPolicyResponse
	isSet bool
}

func (v NullableSetPaymentPolicyResponse) Get() *SetPaymentPolicyResponse {
	return v.value
}

func (v *NullableSetPaymentPolicyResponse) Set(val *SetPaymentPolicyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSetPaymentPolicyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSetPaymentPolicyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetPaymentPolicyResponse(val *SetPaymentPolicyResponse) *NullableSetPaymentPolicyResponse {
	return &NullableSetPaymentPolicyResponse{value: val, isSet: true}
}

func (v NullableSetPaymentPolicyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetPaymentPolicyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


