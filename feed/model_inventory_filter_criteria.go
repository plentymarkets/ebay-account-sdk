/*
Feed API

<p>The <strong>Feed API</strong> lets sellers upload input files, download reports and files including their status, filter reports using URI parameters, and retrieve customer service metrics task details.</p>

API version: v1.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package feed

import (
	"encoding/json"
)

// InventoryFilterCriteria The container for the filter fields. This container is used to set the filter criteria for the order report. A seller can set date range filters and/or can retrieve orders in a specific state.
type InventoryFilterCriteria struct {
	CreationDateRange *DateRange `json:"creationDateRange,omitempty"`
	ModifiedDateRange *DateRange `json:"modifiedDateRange,omitempty"`
	// The type of buying option for the order. Supports LMS_ACTIVE_INVENTORY_REPORT. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:ListingFormatEnum'>eBay API documentation</a>
	ListingFormat *string `json:"listingFormat,omitempty"`
	// The status of the listing (whether the listing was unsold or is active). The UNSOLD value does not apply to LMS_ACTIVE_INVENTORY_REPORT feed types. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:ListingStatusEnum'>eBay API documentation</a>
	ListingStatus *string `json:"listingStatus,omitempty"`
}

// NewInventoryFilterCriteria instantiates a new InventoryFilterCriteria object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInventoryFilterCriteria() *InventoryFilterCriteria {
	this := InventoryFilterCriteria{}
	return &this
}

// NewInventoryFilterCriteriaWithDefaults instantiates a new InventoryFilterCriteria object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInventoryFilterCriteriaWithDefaults() *InventoryFilterCriteria {
	this := InventoryFilterCriteria{}
	return &this
}

// GetCreationDateRange returns the CreationDateRange field value if set, zero value otherwise.
func (o *InventoryFilterCriteria) GetCreationDateRange() DateRange {
	if o == nil || o.CreationDateRange == nil {
		var ret DateRange
		return ret
	}
	return *o.CreationDateRange
}

// GetCreationDateRangeOk returns a tuple with the CreationDateRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryFilterCriteria) GetCreationDateRangeOk() (*DateRange, bool) {
	if o == nil || o.CreationDateRange == nil {
		return nil, false
	}
	return o.CreationDateRange, true
}

// HasCreationDateRange returns a boolean if a field has been set.
func (o *InventoryFilterCriteria) HasCreationDateRange() bool {
	if o != nil && o.CreationDateRange != nil {
		return true
	}

	return false
}

// SetCreationDateRange gets a reference to the given DateRange and assigns it to the CreationDateRange field.
func (o *InventoryFilterCriteria) SetCreationDateRange(v DateRange) {
	o.CreationDateRange = &v
}

// GetModifiedDateRange returns the ModifiedDateRange field value if set, zero value otherwise.
func (o *InventoryFilterCriteria) GetModifiedDateRange() DateRange {
	if o == nil || o.ModifiedDateRange == nil {
		var ret DateRange
		return ret
	}
	return *o.ModifiedDateRange
}

// GetModifiedDateRangeOk returns a tuple with the ModifiedDateRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryFilterCriteria) GetModifiedDateRangeOk() (*DateRange, bool) {
	if o == nil || o.ModifiedDateRange == nil {
		return nil, false
	}
	return o.ModifiedDateRange, true
}

// HasModifiedDateRange returns a boolean if a field has been set.
func (o *InventoryFilterCriteria) HasModifiedDateRange() bool {
	if o != nil && o.ModifiedDateRange != nil {
		return true
	}

	return false
}

// SetModifiedDateRange gets a reference to the given DateRange and assigns it to the ModifiedDateRange field.
func (o *InventoryFilterCriteria) SetModifiedDateRange(v DateRange) {
	o.ModifiedDateRange = &v
}

// GetListingFormat returns the ListingFormat field value if set, zero value otherwise.
func (o *InventoryFilterCriteria) GetListingFormat() string {
	if o == nil || o.ListingFormat == nil {
		var ret string
		return ret
	}
	return *o.ListingFormat
}

// GetListingFormatOk returns a tuple with the ListingFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryFilterCriteria) GetListingFormatOk() (*string, bool) {
	if o == nil || o.ListingFormat == nil {
		return nil, false
	}
	return o.ListingFormat, true
}

// HasListingFormat returns a boolean if a field has been set.
func (o *InventoryFilterCriteria) HasListingFormat() bool {
	if o != nil && o.ListingFormat != nil {
		return true
	}

	return false
}

// SetListingFormat gets a reference to the given string and assigns it to the ListingFormat field.
func (o *InventoryFilterCriteria) SetListingFormat(v string) {
	o.ListingFormat = &v
}

// GetListingStatus returns the ListingStatus field value if set, zero value otherwise.
func (o *InventoryFilterCriteria) GetListingStatus() string {
	if o == nil || o.ListingStatus == nil {
		var ret string
		return ret
	}
	return *o.ListingStatus
}

// GetListingStatusOk returns a tuple with the ListingStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryFilterCriteria) GetListingStatusOk() (*string, bool) {
	if o == nil || o.ListingStatus == nil {
		return nil, false
	}
	return o.ListingStatus, true
}

// HasListingStatus returns a boolean if a field has been set.
func (o *InventoryFilterCriteria) HasListingStatus() bool {
	if o != nil && o.ListingStatus != nil {
		return true
	}

	return false
}

// SetListingStatus gets a reference to the given string and assigns it to the ListingStatus field.
func (o *InventoryFilterCriteria) SetListingStatus(v string) {
	o.ListingStatus = &v
}

func (o InventoryFilterCriteria) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreationDateRange != nil {
		toSerialize["creationDateRange"] = o.CreationDateRange
	}
	if o.ModifiedDateRange != nil {
		toSerialize["modifiedDateRange"] = o.ModifiedDateRange
	}
	if o.ListingFormat != nil {
		toSerialize["listingFormat"] = o.ListingFormat
	}
	if o.ListingStatus != nil {
		toSerialize["listingStatus"] = o.ListingStatus
	}
	return json.Marshal(toSerialize)
}

type NullableInventoryFilterCriteria struct {
	value *InventoryFilterCriteria
	isSet bool
}

func (v NullableInventoryFilterCriteria) Get() *InventoryFilterCriteria {
	return v.value
}

func (v *NullableInventoryFilterCriteria) Set(val *InventoryFilterCriteria) {
	v.value = val
	v.isSet = true
}

func (v NullableInventoryFilterCriteria) IsSet() bool {
	return v.isSet
}

func (v *NullableInventoryFilterCriteria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInventoryFilterCriteria(val *InventoryFilterCriteria) *NullableInventoryFilterCriteria {
	return &NullableInventoryFilterCriteria{value: val, isSet: true}
}

func (v NullableInventoryFilterCriteria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInventoryFilterCriteria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


