/*
Feed API

<p>The <strong>Feed API</strong> lets sellers upload input files, download reports and files including their status, filter reports using URI parameters, and retrieve customer service metrics task details.</p>

API version: v1.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package feed

import (
	"encoding/json"
)

// CreateInventoryTaskRequest struct for CreateInventoryTaskRequest
type CreateInventoryTaskRequest struct {
	// The schemaVersion/version number of the file format (use the schema version of the API to which you are programming): LMS Version Details / Schema Version File Exchange Schema Version
	SchemaVersion *string `json:"schemaVersion,omitempty"`
	// The feed type associated with the inventory task you are about to create. Use a feedType that is available for your API. Presently, only one feed type is available: LMS_ACTIVE_INVENTORY_REPORT
	FeedType *string `json:"feedType,omitempty"`
	FilterCriteria *InventoryFilterCriteria `json:"filterCriteria,omitempty"`
	// The inventory file template used to return specific types of inventory tasks. Presently not applicable for LMS_ACTIVE_INVENTORY_REPORT. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:InventoryFileTemplateEnum'>eBay API documentation</a>
	InventoryFileTemplate *string `json:"inventoryFileTemplate,omitempty"`
}

// NewCreateInventoryTaskRequest instantiates a new CreateInventoryTaskRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateInventoryTaskRequest() *CreateInventoryTaskRequest {
	this := CreateInventoryTaskRequest{}
	return &this
}

// NewCreateInventoryTaskRequestWithDefaults instantiates a new CreateInventoryTaskRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateInventoryTaskRequestWithDefaults() *CreateInventoryTaskRequest {
	this := CreateInventoryTaskRequest{}
	return &this
}

// GetSchemaVersion returns the SchemaVersion field value if set, zero value otherwise.
func (o *CreateInventoryTaskRequest) GetSchemaVersion() string {
	if o == nil || o.SchemaVersion == nil {
		var ret string
		return ret
	}
	return *o.SchemaVersion
}

// GetSchemaVersionOk returns a tuple with the SchemaVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInventoryTaskRequest) GetSchemaVersionOk() (*string, bool) {
	if o == nil || o.SchemaVersion == nil {
		return nil, false
	}
	return o.SchemaVersion, true
}

// HasSchemaVersion returns a boolean if a field has been set.
func (o *CreateInventoryTaskRequest) HasSchemaVersion() bool {
	if o != nil && o.SchemaVersion != nil {
		return true
	}

	return false
}

// SetSchemaVersion gets a reference to the given string and assigns it to the SchemaVersion field.
func (o *CreateInventoryTaskRequest) SetSchemaVersion(v string) {
	o.SchemaVersion = &v
}

// GetFeedType returns the FeedType field value if set, zero value otherwise.
func (o *CreateInventoryTaskRequest) GetFeedType() string {
	if o == nil || o.FeedType == nil {
		var ret string
		return ret
	}
	return *o.FeedType
}

// GetFeedTypeOk returns a tuple with the FeedType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInventoryTaskRequest) GetFeedTypeOk() (*string, bool) {
	if o == nil || o.FeedType == nil {
		return nil, false
	}
	return o.FeedType, true
}

// HasFeedType returns a boolean if a field has been set.
func (o *CreateInventoryTaskRequest) HasFeedType() bool {
	if o != nil && o.FeedType != nil {
		return true
	}

	return false
}

// SetFeedType gets a reference to the given string and assigns it to the FeedType field.
func (o *CreateInventoryTaskRequest) SetFeedType(v string) {
	o.FeedType = &v
}

// GetFilterCriteria returns the FilterCriteria field value if set, zero value otherwise.
func (o *CreateInventoryTaskRequest) GetFilterCriteria() InventoryFilterCriteria {
	if o == nil || o.FilterCriteria == nil {
		var ret InventoryFilterCriteria
		return ret
	}
	return *o.FilterCriteria
}

// GetFilterCriteriaOk returns a tuple with the FilterCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInventoryTaskRequest) GetFilterCriteriaOk() (*InventoryFilterCriteria, bool) {
	if o == nil || o.FilterCriteria == nil {
		return nil, false
	}
	return o.FilterCriteria, true
}

// HasFilterCriteria returns a boolean if a field has been set.
func (o *CreateInventoryTaskRequest) HasFilterCriteria() bool {
	if o != nil && o.FilterCriteria != nil {
		return true
	}

	return false
}

// SetFilterCriteria gets a reference to the given InventoryFilterCriteria and assigns it to the FilterCriteria field.
func (o *CreateInventoryTaskRequest) SetFilterCriteria(v InventoryFilterCriteria) {
	o.FilterCriteria = &v
}

// GetInventoryFileTemplate returns the InventoryFileTemplate field value if set, zero value otherwise.
func (o *CreateInventoryTaskRequest) GetInventoryFileTemplate() string {
	if o == nil || o.InventoryFileTemplate == nil {
		var ret string
		return ret
	}
	return *o.InventoryFileTemplate
}

// GetInventoryFileTemplateOk returns a tuple with the InventoryFileTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInventoryTaskRequest) GetInventoryFileTemplateOk() (*string, bool) {
	if o == nil || o.InventoryFileTemplate == nil {
		return nil, false
	}
	return o.InventoryFileTemplate, true
}

// HasInventoryFileTemplate returns a boolean if a field has been set.
func (o *CreateInventoryTaskRequest) HasInventoryFileTemplate() bool {
	if o != nil && o.InventoryFileTemplate != nil {
		return true
	}

	return false
}

// SetInventoryFileTemplate gets a reference to the given string and assigns it to the InventoryFileTemplate field.
func (o *CreateInventoryTaskRequest) SetInventoryFileTemplate(v string) {
	o.InventoryFileTemplate = &v
}

func (o CreateInventoryTaskRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SchemaVersion != nil {
		toSerialize["schemaVersion"] = o.SchemaVersion
	}
	if o.FeedType != nil {
		toSerialize["feedType"] = o.FeedType
	}
	if o.FilterCriteria != nil {
		toSerialize["filterCriteria"] = o.FilterCriteria
	}
	if o.InventoryFileTemplate != nil {
		toSerialize["inventoryFileTemplate"] = o.InventoryFileTemplate
	}
	return json.Marshal(toSerialize)
}

type NullableCreateInventoryTaskRequest struct {
	value *CreateInventoryTaskRequest
	isSet bool
}

func (v NullableCreateInventoryTaskRequest) Get() *CreateInventoryTaskRequest {
	return v.value
}

func (v *NullableCreateInventoryTaskRequest) Set(val *CreateInventoryTaskRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateInventoryTaskRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateInventoryTaskRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateInventoryTaskRequest(val *CreateInventoryTaskRequest) *NullableCreateInventoryTaskRequest {
	return &NullableCreateInventoryTaskRequest{value: val, isSet: true}
}

func (v NullableCreateInventoryTaskRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateInventoryTaskRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


