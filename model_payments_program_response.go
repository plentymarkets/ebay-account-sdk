/*
Account API

The <b>Account API</b> gives sellers the ability to configure their eBay seller accounts, including the seller's policies (the Fulfillment Policy, Payment Policy, and Return Policy), opt in and out of eBay seller programs, configure sales tax tables, and get account information.  <br><br>For details on the availability of the methods in this API, see <a href=\"/api-docs/sell/account/overview.html#requirements\">Account API requirements and restrictions</a>.

API version: v1.6.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ebayaccount

import (
	"encoding/json"
)

// PaymentsProgramResponse The response object containing the sellers status with regards to the specified payment program.
type PaymentsProgramResponse struct {
	// The ID of the eBay marketplace to which the payment program applies. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum'>eBay API documentation</a>
	MarketplaceId *string `json:"marketplaceId,omitempty"`
	// This parameter specifies the payment program whose status is returned by the call.  <br><br>Currently the only supported payments program is <code>EBAY_PAYMENTS</code>. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:PaymentsProgramType'>eBay API documentation</a>
	PaymentsProgramType *string `json:"paymentsProgramType,omitempty"`
	// The enumeration value returned in this field indicates whether or not the seller is enabled for the payments program. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:PaymentsProgramStatus'>eBay API documentation</a>
	Status *string `json:"status,omitempty"`
	// If returned as <code>true</code>, the seller was at one point opted-in to the associated payment program, but they later opted out of the program. A value of <code>false</code> indicates the seller never opted-in to the program or if they did opt-in to the program, they never opted-out of it.  <br><br>It's important to note that the setting of this field does not indicate the seller's current status regarding the payment program. It is possible for this field to return <code>true</code> while the <b>status</b> field returns <code>OPTED_IN</code>.
	WasPreviouslyOptedIn *bool `json:"wasPreviouslyOptedIn,omitempty"`
}

// NewPaymentsProgramResponse instantiates a new PaymentsProgramResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentsProgramResponse() *PaymentsProgramResponse {
	this := PaymentsProgramResponse{}
	return &this
}

// NewPaymentsProgramResponseWithDefaults instantiates a new PaymentsProgramResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentsProgramResponseWithDefaults() *PaymentsProgramResponse {
	this := PaymentsProgramResponse{}
	return &this
}

// GetMarketplaceId returns the MarketplaceId field value if set, zero value otherwise.
func (o *PaymentsProgramResponse) GetMarketplaceId() string {
	if o == nil || o.MarketplaceId == nil {
		var ret string
		return ret
	}
	return *o.MarketplaceId
}

// GetMarketplaceIdOk returns a tuple with the MarketplaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentsProgramResponse) GetMarketplaceIdOk() (*string, bool) {
	if o == nil || o.MarketplaceId == nil {
		return nil, false
	}
	return o.MarketplaceId, true
}

// HasMarketplaceId returns a boolean if a field has been set.
func (o *PaymentsProgramResponse) HasMarketplaceId() bool {
	if o != nil && o.MarketplaceId != nil {
		return true
	}

	return false
}

// SetMarketplaceId gets a reference to the given string and assigns it to the MarketplaceId field.
func (o *PaymentsProgramResponse) SetMarketplaceId(v string) {
	o.MarketplaceId = &v
}

// GetPaymentsProgramType returns the PaymentsProgramType field value if set, zero value otherwise.
func (o *PaymentsProgramResponse) GetPaymentsProgramType() string {
	if o == nil || o.PaymentsProgramType == nil {
		var ret string
		return ret
	}
	return *o.PaymentsProgramType
}

// GetPaymentsProgramTypeOk returns a tuple with the PaymentsProgramType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentsProgramResponse) GetPaymentsProgramTypeOk() (*string, bool) {
	if o == nil || o.PaymentsProgramType == nil {
		return nil, false
	}
	return o.PaymentsProgramType, true
}

// HasPaymentsProgramType returns a boolean if a field has been set.
func (o *PaymentsProgramResponse) HasPaymentsProgramType() bool {
	if o != nil && o.PaymentsProgramType != nil {
		return true
	}

	return false
}

// SetPaymentsProgramType gets a reference to the given string and assigns it to the PaymentsProgramType field.
func (o *PaymentsProgramResponse) SetPaymentsProgramType(v string) {
	o.PaymentsProgramType = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PaymentsProgramResponse) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentsProgramResponse) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PaymentsProgramResponse) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PaymentsProgramResponse) SetStatus(v string) {
	o.Status = &v
}

// GetWasPreviouslyOptedIn returns the WasPreviouslyOptedIn field value if set, zero value otherwise.
func (o *PaymentsProgramResponse) GetWasPreviouslyOptedIn() bool {
	if o == nil || o.WasPreviouslyOptedIn == nil {
		var ret bool
		return ret
	}
	return *o.WasPreviouslyOptedIn
}

// GetWasPreviouslyOptedInOk returns a tuple with the WasPreviouslyOptedIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentsProgramResponse) GetWasPreviouslyOptedInOk() (*bool, bool) {
	if o == nil || o.WasPreviouslyOptedIn == nil {
		return nil, false
	}
	return o.WasPreviouslyOptedIn, true
}

// HasWasPreviouslyOptedIn returns a boolean if a field has been set.
func (o *PaymentsProgramResponse) HasWasPreviouslyOptedIn() bool {
	if o != nil && o.WasPreviouslyOptedIn != nil {
		return true
	}

	return false
}

// SetWasPreviouslyOptedIn gets a reference to the given bool and assigns it to the WasPreviouslyOptedIn field.
func (o *PaymentsProgramResponse) SetWasPreviouslyOptedIn(v bool) {
	o.WasPreviouslyOptedIn = &v
}

func (o PaymentsProgramResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MarketplaceId != nil {
		toSerialize["marketplaceId"] = o.MarketplaceId
	}
	if o.PaymentsProgramType != nil {
		toSerialize["paymentsProgramType"] = o.PaymentsProgramType
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.WasPreviouslyOptedIn != nil {
		toSerialize["wasPreviouslyOptedIn"] = o.WasPreviouslyOptedIn
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentsProgramResponse struct {
	value *PaymentsProgramResponse
	isSet bool
}

func (v NullablePaymentsProgramResponse) Get() *PaymentsProgramResponse {
	return v.value
}

func (v *NullablePaymentsProgramResponse) Set(val *PaymentsProgramResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentsProgramResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentsProgramResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentsProgramResponse(val *PaymentsProgramResponse) *NullablePaymentsProgramResponse {
	return &NullablePaymentsProgramResponse{value: val, isSet: true}
}

func (v NullablePaymentsProgramResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentsProgramResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


